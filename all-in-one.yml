# Create all machines involved in cluster
---
- hosts: "localhost"
  connection: "local"
  vars:
    ssh_known_hosts_file: "~/.ssh/known_hosts"

  tasks:
  - name: droplets | create
    digital_ocean: state="active" command="droplet" name="{{ item }}" size_id="62" region_id="2" image_id="9801950" ssh_key_ids="625455" wait_timeout="500" unique_name="yes"
    with_items:
      - "{{ target_env }}-db"
      - "{{ target_env }}-index"
      - "{{ target_env }}-logserver"
      - "{{ target_env }}-lb"
      - "{{ target_env }}-app1-1"
      - "{{ target_env }}-app1-2"
    register: droplets

  - name: droplets | export as facts
    set_fact: do_instances="{{ droplets.results }}"

  - name: droplets | debug
    debug: msg="{{ droplets.results }}"

  - name: droplets | register db IP
    add_host: name="{{ item.droplet.ip_address }}" groups="db"
    when: "'-db' in item.droplet.name"
    with_items: droplets.results

  - name: droplets | register index IP
    add_host: name="{{ item.droplet.ip_address }}" groups="index"
    when: "'-index' in item.droplet.name"
    with_items: droplets.results

  - name: droplets | register logserver IP
    add_host: name="{{ item.droplet.ip_address }}" groups="logserver"
    when: "'-logserver' in item.droplet.name"
    with_items: droplets.results

  - name: droplets | register lb IP
    add_host: name="{{ item.droplet.ip_address }}" groups="lb"
    when: "'-lb' in item.droplet.name"
    with_items: droplets.results

  - name: droplets | register app1 IP
    add_host: name="{{ item.droplet.ip_address }}" groups="app1"
    when: "'app1' in item.droplet.name"
    with_items: droplets.results

  - name: make sure the known hosts file exists
    file: path="{{ ssh_known_hosts_file }}" state="touch"

  - name: droplets | remove from known hosts
    shell: "ssh-keygen -R {{ item.droplet.ip_address }}"
    with_items: droplets.results

  - name: droplets | add to know hosts
    shell: "ssh-keyscan -H -T 10 {{ item.droplet.ip_address }} >> {{ ssh_known_hosts_file }}"
    with_items: droplets.results

- hosts: "!localhost"
  remote_user: "root"
  roles:
    - { role: "security", members: "{{ hostvars['localhost'].do_instances }}" }

- hosts: "localhost"
  connection: "local"
  tasks:
  - name:  droplets | delete
    digital_ocean: state="deleted" command="droplet" id="{{ item.droplet.id }}" ssh_key_ids="625455" wait_timeout="500"
    with_items: droplets.results
