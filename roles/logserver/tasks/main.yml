---
# Links
- name: link | link logserver to rsyslog
  lineinfile: dest=/etc/hosts regexp='{{ logserver.rsyslog.alias }}$' line='{{ logserver.rsyslog.ip }} {{ logserver.rsyslog.alias }}' state=present backup=yes

#- name: link | link logserver to logstash
#  lineinfile: dest=/etc/hosts regexp='{{ logserver.logstash.alias }}$' line='{{ logserver.logstash.ip }} {{ logserver.logstash.alias }}' state=present backup=yes
#
#- name: link | link logserver to elasticsearch
#  lineinfile: dest=/etc/hosts regexp='{{ logserver.elasticsearch.alias }}$' line='{{ logserver.elasticsearch.ip }} {{ logserver.elasticsearch.alias }}' state=present backup=yes
#
#- name: link | link logserver to kibana
#  lineinfile: dest=/etc/hosts regexp='{{ logserver.kibana.alias }}$' line='{{ logserver.kibana.ip }} {{ logserver.kibana.alias }}' state=present backup=yes

# Rsyslog

- name: rsyslog | install
  apt: pkg=rsyslog state=present update_cache=yes

- name: "Template rsyslog config"
  template: src=rsyslog.conf.j2 dest=/etc/rsyslog.conf owner=root group=root mode=0644 backup=yes
  notify: Restart rsyslog

- name: ensure service has been restarted
  service: name=rsyslog state=restarted


## Elasticsearch
#- name: elasticsearch | add repository key
#  apt_key: url=http://packages.elasticsearch.org/GPG-KEY-elasticsearch
#
#- name: elasticsearch | add apt repository
#  apt_repository: repo='deb http://packages.elasticsearch.org/elasticsearch/{{ logserver.elasticsearch.version }}/debian stable main' update_cache=yes
#
#- name: elasticsearch | install
#  apt: pkg=elasticsearch state=latest update_cache=yes
#
#- name: elasticsearch | configure
#  template: src=elasticsearch.yml.j2 dest=/etc/elasticsearch/elasticsearch.yml
#  notify: elasticsearch | restart
#
#- name: elasticsearch | ensure service is running
#  service: name=elasticsearch state=started
#
#- name: elasticsearch | schedule at restart
#  shell: "update-rc.d elasticsearch defaults 95 10"
#
## Kibana
#- name: kibana | download
#  get_url: url="https://download.elasticsearch.org/kibana/kibana/kibana-{{ kibana.version }}.tar.gz" dest="{{ workdir }}"
#
#- name: kibana | extract
#  unarchive: src="{{ workdir }}/kibana-{{ kibana.version }}.tar.gz" dest="{{ workdir }}" copy=no
#
#- name: kibana | change elasticsearch default port to 80
#  template: src=config.js.j2 dest="{{ workdir }}/kibana-{{ kibana.version }}/config.js"
#
#- name: kibana | create static web dir
#  file: state="directory" dest="{{ nginx.root }}"
#
#- name: kibana | populate static web dir content
#  shell: "cp -R {{ workdir }}/kibana-{{ kibana.version }}/* {{ nginx.root }}/"
#
## Nginx
#- name: nginx | install
#  apt: pkg=nginx state=latest update_cache=yes
#
#- name: nginx | configure
#  template: src=nginx.conf.j2 dest=/etc/nginx/sites-available/default
#  notify: nginx | restart
#
#- name: nginx | ensure service is running
#  service: name=nginx state=started
#
## Logstash
#- name: logstash | add repository key
#  apt_key: url=http://packages.elasticsearch.org/GPG-KEY-elasticsearch
#
#- name: logstash | add apt repository
#  apt_repository: repo='deb http://packages.elasticsearch.org/logstash/{{ logserver.elasticsearch.version }}/debian stable main' update_cache=yes
#
#- name: logstash | install
#  apt: pkg=logstash state=latest update_cache=yes
#
#- name: logstash | create certificate dir
#  file: state="directory" dest="/etc/pki/tls/certs"
#
#- name: logstash | create private key dir
#  file: state="directory" dest="/etc/pki/tls/private"
#
#- name: logstash | copy private key
#  copy: src=private/logstash-forwarder.key dest=/etc/pki/tls/private
#
#- name: logstash | copy certificate
#  copy: src=certs/logstash-forwarder.crt dest=/etc/pki/tls/certs
#
#- name: logstash | configure
#  template: src=logstash.conf.j2 dest=/etc/logstash/conf.d/logstash.conf
#  notify: logstash | restart
#
#- name: logstash | ensure service is running
#  service: name=logstash state=started
