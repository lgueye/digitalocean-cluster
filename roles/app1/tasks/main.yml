---
# Links
- name: link | link app1 to db
  lineinfile: dest="/etc/hosts" regexp="{{ db.alias }}$" line="{{ db.ip }} {{ db.alias }}" state="present" backup="yes"

- name: link | link app1 to index
  lineinfile: dest="/etc/hosts" regexp="{{ index.alias }}$" line="{{ index.ip }} {{ index.alias }}" state="present" backup="yes"

- name: link | link app1 to logserver
  lineinfile: dest="/etc/hosts" regexp="{{ logserver.rsyslog.alias }}$" line="{{ logserver.rsyslog.ip }} {{ logserver.rsyslog.alias }}" state="present" backup="yes"

- name: application | read git revision
  local_action: shell grep git.commit.id.abbrev= /tmp/app1/index-upgrader/target/classes/git.properties | cut -d= -f2
  sudo: no
  register: "git_rev"

- name: application | create deploy dir
  file: state="directory" dest="/opt/java-apps/app1-api/{{ git_rev.stdout }}"

- name: application | unlink
  file: state="absent" dest="/opt/app1-api"
  ignore_errors: yes

- name: application | link
  file: state="link" src="/opt/java-apps/app1-api/{{ git_rev.stdout }}" dest="/opt/app1-api"

- name: application | copy jar
  copy: src="{{ app1.clonedir }}/app1/api/target/app1-api.jar" dest="/opt/app1-api/"

- name: application | copy app config
  copy: src="{{ app1.clonedir }}/app1/api/app1-api.yml" dest="/opt/app1-api/"

- name: application | copy log config
  copy: src="{{ app1.clonedir }}/app1/api/logback.xml" dest="/opt/app1-api/"

- name: unix service | copy config
  template: src="app1-api.sh.j2" dest="/opt/app1-api/app1-api.sh" mode="u=xrw,g=xr,o=r"

- name: unix service | copy spring boot management script
  template: src="spring-boot-service.sh.j2" dest="/opt/app1-api/spring-boot-service.sh" mode="u=xrw,g=xr,o=r"

- name: unix service | copy init script
  copy: src="app1-api" dest="/etc/init.d/" mode="u=xrw,g=xr,o=r"

- name: application | ensure service is running
  service: name="app1-api" state="restarted"
